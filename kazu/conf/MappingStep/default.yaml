_convert_: 'all'
_target_: kazu.steps.linking.post_processing.mapping_step.MappingStep
parsers: ${oc.dict.values:ontologies.parsers}
strategy_runner:
  _target_: kazu.steps.linking.post_processing.strategy_runner.StrategyRunner
  cross_ref_managers:
    - _target_: kazu.steps.linking.post_processing.xref_manager.OxoCrossReferenceManager
      # this stops parameters that are themselves dictionaries from becoming Structured Configs, which breaks behaviour at runtime.
      _convert_: 'partial'
      oxo_kazu_name_mapping:
        MONDO: MONDO
        HP: HP
      uri_prefixes:
        MONDO: http://purl.obolibrary.org/obo/MONDO_
        HP: http://purl.obolibrary.org/obo/HP_
      oxo_query:
        MONDO:
          - HP
        HP:
          - MONDO
      source_to_parser_metadata_lookup:
        MONDO: ${ontologies.parsers.mondo_parser.name}
        HP: ${ontologies.parsers.hpo_parser.name}
      path:
        _target_: pathlib.Path
        _args_:
          - ${oc.env:KAZU_MODEL_PACK}/mapping_step/oxo_dump
  symbolic_strategies:

    HIGHLY_LIKELY:
      _target_: kazu.steps.linking.post_processing.strategy_runner.ConfidenceLevelStrategyExecution
      stop_on_success: True
      default_strategies:
        - _target_: kazu.steps.linking.post_processing.mapping_strategies.strategies.ExactMatchMappingStrategy
          confidence: ${confidence.string_matching_highly_likely}
          disambiguation_strategies: ${DisambiguationStrategies.default}

        - _target_: kazu.steps.linking.post_processing.mapping_strategies.strategies.SymbolMatchMappingStrategy
          confidence: ${confidence.string_matching_probable}
          disambiguation_strategies: ${DisambiguationStrategies.default}

        - _target_: kazu.steps.linking.post_processing.mapping_strategies.strategies.TermNormIsSubStringMappingStrategy
          confidence: ${confidence.string_matching_probable}
          disambiguation_strategies: ${DisambiguationStrategies.default}

        - _target_: kazu.steps.linking.post_processing.mapping_strategies.strategies.StrongMatchMappingStrategy
          confidence: ${confidence.string_matching_possible}
          disambiguation_strategies: ${DisambiguationStrategies.default}
          symbolic_only: True
      ent_class_strategies:
        gene:
          - _target_: kazu.steps.linking.post_processing.mapping_strategies.strategies.ExactMatchMappingStrategy
            confidence: ${confidence.string_matching_highly_likely}
            disambiguation_strategies: ${DisambiguationStrategies.gene}

          - _target_: kazu.steps.linking.post_processing.mapping_strategies.strategies.SymbolMatchMappingStrategy
            confidence: ${confidence.string_matching_probable}
            disambiguation_strategies: ${DisambiguationStrategies.gene}

          - _target_: kazu.steps.linking.post_processing.mapping_strategies.strategies.TermNormIsSubStringMappingStrategy
            confidence: ${confidence.string_matching_probable}
            disambiguation_strategies: ${DisambiguationStrategies.gene}

          - _target_: kazu.steps.linking.post_processing.mapping_strategies.strategies.StrongMatchMappingStrategy
            confidence: ${confidence.string_matching_possible}
            disambiguation_strategies: ${DisambiguationStrategies.gene}
            symbolic_only: True
            search_threshold: 90.0
        disease:
          - _target_: kazu.steps.linking.post_processing.mapping_strategies.strategies.ExactMatchMappingStrategy
            confidence: ${confidence.string_matching_highly_likely}
            disambiguation_strategies: ${DisambiguationStrategies.default}

          - _target_: kazu.steps.linking.post_processing.mapping_strategies.strategies.SymbolMatchMappingStrategy
            confidence: ${confidence.string_matching_probable}
            disambiguation_strategies: ${DisambiguationStrategies.default}

          - _target_: kazu.steps.linking.post_processing.mapping_strategies.strategies.TermNormIsSubStringMappingStrategy
            confidence: ${confidence.string_matching_probable}
            disambiguation_strategies: ${DisambiguationStrategies.gene}

          - _target_: kazu.steps.linking.post_processing.mapping_strategies.strategies.StrongMatchMappingStrategy
            confidence: ${confidence.string_matching_possible}
            disambiguation_strategies: ${DisambiguationStrategies.default}
            symbolic_only: True
        drug:
          - _target_: kazu.steps.linking.post_processing.mapping_strategies.strategies.ExactMatchMappingStrategy
            confidence: ${confidence.string_matching_highly_likely}
            disambiguation_strategies: ${DisambiguationStrategies.default}
        cell_line:
          - _target_: kazu.steps.linking.post_processing.mapping_strategies.strategies.ExactMatchMappingStrategy
            confidence: ${confidence.string_matching_highly_likely}
            disambiguation_strategies: ${DisambiguationStrategies.cell_line}

          - _target_: kazu.steps.linking.post_processing.mapping_strategies.strategies.SymbolMatchMappingStrategy
            confidence: ${confidence.string_matching_probable}
            disambiguation_strategies: ${DisambiguationStrategies.cell_line}

          - _target_: kazu.steps.linking.post_processing.mapping_strategies.strategies.TermNormIsSubStringMappingStrategy
            confidence: ${confidence.string_matching_probable}
            disambiguation_strategies: ${DisambiguationStrategies.cell_line}

    PROBABLE:
      _target_: kazu.steps.linking.post_processing.strategy_runner.ConfidenceLevelStrategyExecution
      stop_on_success: True
      default_strategies:
        - _target_: kazu.steps.linking.post_processing.mapping_strategies.strategies.ExactMatchMappingStrategy
          disambiguation_strategies: ${DisambiguationStrategies.default}
          confidence: ${confidence.string_matching_highly_likely}
      ent_class_strategies:
        _target_: builtins.dict

    POSSIBLE:
      _target_: kazu.steps.linking.post_processing.strategy_runner.ConfidenceLevelStrategyExecution
      stop_on_success: True
      default_strategies:
        - _target_: kazu.steps.linking.post_processing.mapping_strategies.strategies.ExactMatchMappingStrategy
          confidence: ${confidence.string_matching_highly_likely}
          disambiguation_essential: true
          disambiguation_strategies:
            - _target_: kazu.steps.linking.post_processing.disambiguation.strategies.DefinedElsewhereInDocumentDisambiguationStrategy
              confidence: ${confidence.disambiguation_highly_likely}
      ent_class_strategies:
        _target_: builtins.dict


  non_symbolic_strategies:

    HIGHLY_LIKELY:
      _target_: kazu.steps.linking.post_processing.strategy_runner.ConfidenceLevelStrategyExecution
      stop_on_success: True
      default_strategies:
        - _target_: kazu.steps.linking.post_processing.mapping_strategies.strategies.ExactMatchMappingStrategy
          confidence: ${confidence.string_matching_highly_likely}
          disambiguation_strategies: ${DisambiguationStrategies.default}

        - _target_: kazu.steps.linking.post_processing.mapping_strategies.strategies.StrongMatchMappingStrategy
          confidence: ${confidence.string_matching_possible}
          disambiguation_strategies: ${DisambiguationStrategies.default}
          symbolic_only: False
      ent_class_strategies:
        drug:
          - _target_: kazu.steps.linking.post_processing.mapping_strategies.strategies.ExactMatchMappingStrategy
            confidence: ${confidence.string_matching_highly_likely}
            disambiguation_strategies: ${DisambiguationStrategies.default}
        gene:
          - _target_: kazu.steps.linking.post_processing.mapping_strategies.strategies.ExactMatchMappingStrategy
            confidence: ${confidence.string_matching_highly_likely}
            disambiguation_strategies: ${DisambiguationStrategies.gene}

          - _target_: kazu.steps.linking.post_processing.mapping_strategies.strategies.TermNormIsSubStringMappingStrategy
            confidence: ${confidence.string_matching_probable}
            disambiguation_strategies: ${DisambiguationStrategies.gene}

          - _target_: kazu.steps.linking.post_processing.mapping_strategies.strategies.StrongMatchMappingStrategy
            confidence: ${confidence.string_matching_probable}
            disambiguation_strategies: ${DisambiguationStrategies.gene}
            symbolic_only: False
        disease:
          - _target_: kazu.steps.linking.post_processing.mapping_strategies.strategies.ExactMatchMappingStrategy
            confidence: ${confidence.string_matching_highly_likely}
            disambiguation_strategies: ${DisambiguationStrategies.default}

          - _target_: kazu.steps.linking.post_processing.mapping_strategies.strategies.StrongMatchWithEmbeddingConfirmationStringMatchingStrategy
            confidence: ${confidence.string_matching_possible}
            disambiguation_strategies: ${DisambiguationStrategies.default}
            symbolic_only: False
            complex_string_scorer: ${SapbertStringSimilarityScorer}
        cell_line:
          - _target_: kazu.steps.linking.post_processing.mapping_strategies.strategies.ExactMatchMappingStrategy
            confidence: ${confidence.string_matching_highly_likely}
            disambiguation_strategies: ${DisambiguationStrategies.cell_line}

          - _target_: kazu.steps.linking.post_processing.mapping_strategies.strategies.SymbolMatchMappingStrategy
            confidence: ${confidence.string_matching_probable}
            disambiguation_strategies: ${DisambiguationStrategies.cell_line}

          - _target_: kazu.steps.linking.post_processing.mapping_strategies.strategies.TermNormIsSubStringMappingStrategy
            confidence: ${confidence.string_matching_probable}
            disambiguation_strategies: ${DisambiguationStrategies.cell_line}
    PROBABLE:
      _target_: kazu.steps.linking.post_processing.strategy_runner.ConfidenceLevelStrategyExecution
      stop_on_success: True
      default_strategies:
        - _target_: kazu.steps.linking.post_processing.mapping_strategies.strategies.ExactMatchMappingStrategy
          disambiguation_strategies: ${DisambiguationStrategies.default}
          confidence: ${confidence.string_matching_highly_likely}
      ent_class_strategies:
        _target_: builtins.dict

    POSSIBLE:
      _target_: kazu.steps.linking.post_processing.strategy_runner.ConfidenceLevelStrategyExecution
      stop_on_success: True
      default_strategies:
        - _target_: kazu.steps.linking.post_processing.mapping_strategies.strategies.ExactMatchMappingStrategy
          confidence: ${confidence.string_matching_highly_likely}
          disambiguation_essential: true
          disambiguation_strategies:
            - _target_: kazu.steps.linking.post_processing.disambiguation.strategies.DefinedElsewhereInDocumentDisambiguationStrategy
              confidence: ${confidence.disambiguation_highly_likely}
      ent_class_strategies:
        _target_: builtins.dict

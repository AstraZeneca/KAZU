indices:
  stato_index:
    _target_: kazu.utils.link_index.DictionaryIndex
    parser: ${ontologies.parsers.stato_parser}
    # we can just reuse the anatomy scorer here, rather than defining a new type
    boolean_scorers: ${StringScorers.number_match_only}
parsers:
  stato_parser:
    _target_: kazu.ontology_preprocessing.parsers.StatoParser
    name: STATO
    in_path: ${oc.env:KAZU_MODEL_PACK}/ontologies/stato.owl
    data_origin: 'RC1.4'
    string_scorer: ${SapbertStringSimilarityScorer}
    synonym_generator: ${SynonymGeneration.default}
    entity_class: measurement
    curations_path: ${oc.env:KAZU_MODEL_PACK}/ontologies/${.name}_curations.jsonl
    global_actions: ${global_actions}
    autocurator:
      _target_: kazu.ontology_preprocessing.autocuration.AutoCurator
      actions:
        - _target_: kazu.ontology_preprocessing.autocuration.SymbolicToCaseSensitiveAction
          entity_class: ${ontologies.parsers.stato_parser.entity_class}
        - _target_: kazu.ontology_preprocessing.autocuration.IsCommmonWord
          path: ${oc.env:KAZU_MODEL_PACK}/misc/20k_most_common.txt
        - _target_: kazu.ontology_preprocessing.autocuration.MinLength
          min_len: 2
        - _target_: kazu.ontology_preprocessing.autocuration.MaxLength
          max_len: 60
        - _target_: hydra.utils.get_method
          path: kazu.ontology_preprocessing.autocuration.initial_lowercase_then_upper_to_case_sensitive
